import ast
from telethon import TelegramClient, events,types
from telethon.sessions import StringSession
import asyncio
from telethon.tl.functions.messages import SendReactionRequest



async def main():
    acc_str = input().strip()
    account = ast.literal_eval(acc_str)
    CHAT_ID = 'narhipovd'  # Юзернейм чата
    reaction_emoji = '❤️'
    message_counter = 0

    client = TelegramClient(StringSession(account['session']), account['api_id'], account['api_hash'])

    try:
        await client.start()
        print("Бот успешно подключен и слушает чат...")

        # Получаем полную информацию о чате по юзернейму
        try:
            chat = await client.get_entity(CHAT_ID)
            print(f"Найден чат:(ID: {chat.id})")
        except Exception as e:
            print(f"Ошибка поиска чата: {e}")
            return

        @client.on(events.NewMessage(chats=chat))
        async def handler(event):
            nonlocal message_counter
            message_counter += 1
            print(f"Получено сообщение #{message_counter}")

            if message_counter % 2 == 0:
                try:
                    message_id = event.message.id
                    await client(SendReactionRequest(peer=chat, msg_id=message_id, reaction=[types.ReactionEmoji(emoticon=reaction_emoji)]))
                    print(f"Реакция поставлена на сообщение {event.message.id}")
                except Exception as e:
                    print(f"Ошибка реакции: {e}")

        print("Ожидание сообщений...")
        await client.run_until_disconnected()

    except Exception as e:
        print(f"Критическая ошибка: {e}")
    finally:
        await client.disconnect()


asyncio.run(main())
